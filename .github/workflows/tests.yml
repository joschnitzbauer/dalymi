name: tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.5
      uses: actions/setup-python@v1
      with:
        python-version: 3.5
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=119 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pip install -e .
        pytest
    - name: Test CLI
      run: |
        pip install matplotlib pandas scikit-learn pyyaml
        cd examples
        python iris.py
        python iris.py ls
        python iris.py run
        \[ -f data/clusters\=3/plot.png ] && echo "Found expected output file" || exit 1
        python iris.py undo
        \[ -f data/clusters\=3/plot.png ] && exit 1 || echo "Output file missing as expected"
        python iris.py run --task predict_clusters
        \[ -f data/clusters\=3/predictions.csv ] && echo "Found expected output file" || exit 1
        \[ -f data/clusters\=3/plot.png ] && exit 1 || echo "Output file missing as expected"
        python iris.py undo --task predict_clusters
        \[ -f data/clusters\=3/predictions.csv ] && exit 1 || echo "Output file missing as expected"
        python iris.py undo --task prep_data --downstream
        \[ -f data/clusters\=3/model.pkl ] && exit 1 || echo "Output file missing as expected"
        \[ -f data/prepared.csv ] && exit 1 || echo "Output file missing as expected"
        \[ -f data/raw.csv ] && echo "Found expected output file" || exit 1
        python iris.py dot
        sudo apt-get install graphviz
        dot -Tpng pipeline.dot -o pipeline.png
        cd ..
    - name: Update API reference
      run: |
        pip install pydoc-markdown
        pydocmd simple dalymi.pipeline++ dalymi.resources++ > docs/reference.md
    - name: Commit API reference
      uses: EndBug/add-and-commit@v2.1.0
      with:
        message: "Update API reference"
        path: docs/reference.md
        force: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
